/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardAddStockImport } from './routes/dashboard/add-stock'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as DashboardStockIdIndexImport } from './routes/dashboard/$stockId/index'
import { Route as DashboardStockIdUpdateStockImport } from './routes/dashboard/$stockId/update-stock'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardAddStockRoute = DashboardAddStockImport.update({
  id: '/dashboard/add-stock',
  path: '/dashboard/add-stock',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardStockIdIndexRoute = DashboardStockIdIndexImport.update({
  id: '/dashboard/$stockId/',
  path: '/dashboard/$stockId/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardStockIdUpdateStockRoute =
  DashboardStockIdUpdateStockImport.update({
    id: '/dashboard/$stockId/update-stock',
    path: '/dashboard/$stockId/update-stock',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/add-stock': {
      id: '/dashboard/add-stock'
      path: '/dashboard/add-stock'
      fullPath: '/dashboard/add-stock'
      preLoaderRoute: typeof DashboardAddStockImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/$stockId/update-stock': {
      id: '/dashboard/$stockId/update-stock'
      path: '/dashboard/$stockId/update-stock'
      fullPath: '/dashboard/$stockId/update-stock'
      preLoaderRoute: typeof DashboardStockIdUpdateStockImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/$stockId/': {
      id: '/dashboard/$stockId/'
      path: '/dashboard/$stockId'
      fullPath: '/dashboard/$stockId'
      preLoaderRoute: typeof DashboardStockIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/add-stock': typeof DashboardAddStockRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/$stockId/update-stock': typeof DashboardStockIdUpdateStockRoute
  '/dashboard/$stockId': typeof DashboardStockIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/add-stock': typeof DashboardAddStockRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/$stockId/update-stock': typeof DashboardStockIdUpdateStockRoute
  '/dashboard/$stockId': typeof DashboardStockIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/dashboard/add-stock': typeof DashboardAddStockRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$stockId/update-stock': typeof DashboardStockIdUpdateStockRoute
  '/dashboard/$stockId/': typeof DashboardStockIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/add-stock'
    | '/dashboard'
    | '/dashboard/$stockId/update-stock'
    | '/dashboard/$stockId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/add-stock'
    | '/dashboard'
    | '/dashboard/$stockId/update-stock'
    | '/dashboard/$stockId'
  id:
    | '__root__'
    | '/'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/add-stock'
    | '/dashboard/'
    | '/dashboard/$stockId/update-stock'
    | '/dashboard/$stockId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  DashboardAddStockRoute: typeof DashboardAddStockRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardStockIdUpdateStockRoute: typeof DashboardStockIdUpdateStockRoute
  DashboardStockIdIndexRoute: typeof DashboardStockIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  DashboardAddStockRoute: DashboardAddStockRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardStockIdUpdateStockRoute: DashboardStockIdUpdateStockRoute,
  DashboardStockIdIndexRoute: DashboardStockIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/login",
        "/auth/register",
        "/dashboard/add-stock",
        "/dashboard/",
        "/dashboard/$stockId/update-stock",
        "/dashboard/$stockId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/dashboard/add-stock": {
      "filePath": "dashboard/add-stock.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/dashboard/$stockId/update-stock": {
      "filePath": "dashboard/$stockId/update-stock.tsx"
    },
    "/dashboard/$stockId/": {
      "filePath": "dashboard/$stockId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
